name: BTC Price Prediction

on:
  schedule:
    - cron: '0 */4 * * *'  # 4시간마다 실행
  workflow_dispatch:  # 수동 실행 가능

jobs:
  prediction:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Get BTC Price
        id: price
        run: |
          PRICE=$(curl -s https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT | jq -r .price)
          echo "price=$PRICE" >> $GITHUB_OUTPUT

      - name: Create Issue
        uses: actions/github-script@v6
        env:
          PRICE: ${{ steps.price.outputs.price }}
        with:
          script: |
            const price = parseFloat(process.env.PRICE).toFixed(2);
            const date = new Date().toISOString().split('T')[0];
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `BTC 가격 예측 ${date}`,
              body: `현재 가격: $${price}\n\n👍 = 상승 예상\n👎 = 하락 예상\n\n4시간 후 자동 마감`,
              labels: ['prediction']
            });

      - name: Close Old Issues
        uses: actions/github-script@v6
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['prediction']
            });
            
            const fourHoursAgo = new Date(Date.now() - 4 * 60 * 60 * 1000);
            
            for (const issue of issues.data) {
              if (new Date(issue.created_at) < fourHoursAgo) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              }
            } 